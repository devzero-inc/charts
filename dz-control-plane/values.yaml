# -- Overrides the chart's name.
nameOverride: null

# -- Overrides the chart's computed fullname.
fullnameOverride: null

image:
  # -- Devzero container image repository'
  repository: 056855531191.dkr.ecr.us-west-2.amazonaws.com
  # -- Devzero container image tag'
  tag: "v0.0.0"
  # -- Container pull policy
  pullPolicy: IfNotPresent
  # -- Optionally specify an array of imagePullSecrets
  pullSecrets: []

global:
  podAnnotations: {}

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use
  name: "devzero"

auth:
  # -- Base64 encoded public key for JWT verification
  public_key: ""

api_gateway:
  # -- Number of replicas for Api Gateway
  replicas: 3

  imageName: "api-gateway"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Api Gateway autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Api Gateway
    enabled: false
    # -- Minimum autoscaling replicas for Api Gateway
    minReplicas: 1
    # -- Maximum autoscaling replicas for Api Gateway
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Api Gateway
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Api Gateway
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Api Gateway
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Api Gateway
    requests:
      cpu: 100m
      memory: 128Mi

  # Api Gateway service configuration
  service:
    # -- Port of the Api Gateway service
    port: 8443
    # -- Port of the Api Gateway Metrics service
    metricsPort: 9090
    # -- Type of the Api Gateway service
    type: ClusterIP
    # -- Annotations for the Api Gateway service
    annotations: {}
    # -- Labels for the Api Gateway service
    labels: {}

  # Api Gateway ingress configuration
  ingress:
    # -- Specify if the Api Gateway Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Api Gateway ingress
    annotations: {}
    # -- hosts configuration for the Api Gateway ingress
    hosts:
      - host: api.devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Api Gateway ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - api.devzero.example.com


backend:
  # -- Number of replicas for Backend 
  replicas: 1

  imageName: "backend"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Backend autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Backend
    enabled: false
    # -- Minimum autoscaling replicas for Backend
    minReplicas: 1
    # -- Maximum autoscaling replicas for Backend
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Backend
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Backend
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Backend
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Backend
    requests:
      cpu: 100m
      memory: 128Mi

  # Api Gateway service configuration
  service:
    # -- Port of the Backend service
    port: 8443
    # -- Port of the Backend Metrics service
    metricsPort: 9090
    # -- Type of the Backend service
    type: ClusterIP
    # -- Annotations for the Backend service
    annotations: {}
    # -- Labels for the Backend service
    labels: {}


hydra:
  # -- Number of replicas for Hydra
  replicas: 1

  imageName: "hydra"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Hydra autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Hydra
    enabled: false
    # -- Minimum autoscaling replicas for Hydra
    minReplicas: 1
    # -- Maximum autoscaling replicas for Hydra
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Hydra
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Hydra
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Hydra
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Hydra
    requests:
      cpu: 100m
      memory: 128Mi

  # Hydra service configuration
  service:
    # -- Port of the Hydra service
    port: 8443
    # -- Port of the Hydra Metrics service
    metricsPort: 9090
    # -- Type of the Hydra service
    type: ClusterIP
    # -- Annotations for the Hydra service
    annotations: {}
    # -- Labels for the Hydra service
    labels: {}

  # Hydra ingress configuration
  ingress:
    # -- Specify if the Hydra Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Hydra ingress
    annotations: {}
    # -- hosts configuration for the Hydra ingress
    hosts:
      - host: hydra.devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Hydra ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - hydra.devzero.example.com

logsrv:
  # -- Number of replicas for Logsrv
  replicas: 1

  imageName: "logsrv"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Logsrv autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Logsrv
    enabled: false
    # -- Minimum autoscaling replicas for Logsrv
    minReplicas: 1
    # -- Maximum autoscaling replicas for Logsrv
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Logsrv
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Logsrv
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Logsrv
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Logsrv
    requests:
      cpu: 100m
      memory: 128Mi

  # Logsrv service configuration
  service:
    # -- Port of the Logsrv service
    port: 8443
    # -- Port of the Logsrv Metrics service
    metricsPort: 9090
    # -- Type of the Logsrv service
    type: ClusterIP
    # -- Annotations for the Logsrv service
    annotations: {}
    # -- Labels for the Logsrv service
    labels: {}

  # Logsrv ingress configuration
  ingress:
    # -- Specify if the Logsrv Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Hydra ingress
    annotations: {}
    # -- hosts configuration for the Hydra ingress
    hosts:
      - host: logsrv.devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Logsrv ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - logsrv.devzero.example.com

polland:
  worker:
    # -- Number of replicas for Polland Worker
    replicas: 3

    # 1 hour of termination grace to allow stacks to finishing tasks
    terminationGracePeriodSeconds: 3600

    # Available queues created from worker
    queues:
      - name: fast
        replicaCount: 3
        autoscaling:
          enabled: false 
          minReplicas: 3
          maxReplicas: 5
      - name: build
        replicaCount: 3
        autoscaling:
          enabled: false 
          minReplicas: 3
          maxReplicas: 5
      - name: workload
        replicaCount: 3
        autoscaling:
          enabled: false 
          minReplicas: 3
          maxReplicas: 5
      - name: cluster
        replicaCount: 3
        autoscaling:
          enabled: false 
          minReplicas: 3
          maxReplicas: 5
      - name: hibernation
        replicaCount: 1
        autoscaling:
          enabled: false
          minReplicas: 1
          maxReplicas: 1

  beat:
    # -- Number of replicas for Polland Beat
    replicas: 1

  flower:
    # -- Number of replicas for Polland Flower
    replicas: 1

  celeryExporter:
    # -- Number of replicas for Polland Celery Exporter
    replicas: 1
    
  # -- Number of replicas for Polland 
  replicas: 1

  imageName: "polland"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # -- Env configuration for polland configmap
  env: 
    MYSQL_PORT: "3306"
    MYSQL_DATABASE: "polland"
    MYSQL_USER: "polland"

    USE_DOCKER: "yes"
    # Disable connection pooling in preprod because we are running a small container and we don't want to keep connections open.
    CONN_MAX_AGE: "0"
    DJANGO_ALLOWED_HOSTS: "*"
    DJANGO_SETTINGS_MODULE: "config.settings.production"
    # This is supposed to be a secret, but since it is only used to encrypt sessions and we don't use sessions, it can be defined plaintext.
    DJANGO_SECRET_KEY: "super_secret_key"
    CELERY_FLOWER_USER: "devzero"
    CELERY_FLOWER_PASSWORD: "devzero"

  # Polland autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Polland 
    enabled: false
    # -- Minimum autoscaling replicas for Polland 
    minReplicas: 1
    # -- Maximum autoscaling replicas for Polland 
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Polland 
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Polland 
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Polland 
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Polland 
    requests:
      cpu: 100m
      memory: 128Mi

  # Polland service configuration
  service:
    # -- Port of the Polland service
    port: 8443
    # -- Port of the Polland Metrics service
    metricsPort: 9090
    # -- Type of the Polland service
    type: ClusterIP
    # -- Annotations for the Polland service
    annotations: {}
    # -- Labels for the Polland service
    labels: {}

  # Polland ingress configuration
  ingress:
    # -- Specify if the Polland Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Polland ingress
    annotations: {}
    # -- hosts configuration for the Polland ingress
    hosts:
      - host: polland.devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Polland ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - polland.devzero.example.com

logsrv:
  # -- Number of replicas for Logsrv
  replicas: 1

  imageName: "logsrv"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Logsrv autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Logsrv
    enabled: false
    # -- Minimum autoscaling replicas for Logsrv
    minReplicas: 1
    # -- Maximum autoscaling replicas for Logsrv
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Logsrv
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Logsrv
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Logsrv
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Logsrv
    requests:
      cpu: 100m
      memory: 128Mi

  # Logsrv service configuration
  service:
    # -- Port of the Logsrv service
    port: 8443
    # -- Port of the Logsrv Metrics service
    metricsPort: 9090
    # -- Type of the Logsrv service
    type: ClusterIP
    # -- Annotations for the Logsrv service
    annotations: {}
    # -- Labels for the Logsrv service
    labels: {}

  # Logsrv ingress configuration
  ingress:
    # -- Specify if the Logsrv Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Logsrv ingress
    annotations: {}
    # -- hosts configuration for the Logsrv ingress
    hosts:
      - host: logsrv.devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Logsrv ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - logsrv.devzero.example.com

pulse:
  # -- Number of replicas for Pulse 
  replicas: 1

  imageName: "pulse"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Pulse autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Pulse 
    enabled: false
    # -- Minimum autoscaling replicas for Pulse 
    minReplicas: 1
    # -- Maximum autoscaling replicas for Pulse 
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Pulse 
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Pulse 
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Pulse 
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Pulse 
    requests:
      cpu: 100m
      memory: 128Mi

  # Pulse service configuration
  service:
    # -- Port of the Pulse service
    port: 8443
    # -- Port of the Pulse Metrics service
    metricsPort: 9090
    # -- Type of the Pulse service
    type: ClusterIP
    # -- Annotations for the Pulse service
    annotations: {}
    # -- Labels for the Pulse service
    labels: {}

  # Pulse ingress configuration
  ingress:
    # -- Specify if the Pulse Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Pulse ingress
    annotations: {}
    # -- hosts configuration for the Pulse ingress
    hosts:
      - host: pulse.devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Pulse ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - pulse.devzero.example.com

buildqd:
  # -- Number of replicas for Buildqd 
  replicas: 1

  imageName: "buildqd"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # Buildqd autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Buildqd 
    enabled: false
    # -- Minimum autoscaling replicas for Buildqd 
    minReplicas: 1
    # -- Maximum autoscaling replicas for Buildqd 
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Buildqd 
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Buildqd 
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Buildqd 
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Buildqd 
    requests:
      cpu: 100m
      memory: 128Mi

  # Buildqd service configuration
  service:
    # -- Port of the Buildqd service
    port: 8443
    # -- Port of the Buildqd Metrics service
    metricsPort: 9090
    # -- Type of the Buildqd service
    type: ClusterIP
    # -- Annotations for the Buildqd service
    annotations: {}
    # -- Labels for the Buildqd service
    labels: {}

  buildkit:
    image:
      # Buildkit repository
      repository: docker.io/moby/buildkit
      # Buildkit image policy
      pullPolicy: IfNotPresent
      # Buildkit image tag
      tag: "v0.15.1"

    # Buildkit container security context
    securityContext:
      privileged: true

    # Buildkit command
    command: buildkitd

    # Buildkit args
    args:
      - --addr
      - unix:///run/buildkit/buildkitd.sock
      - --addr
      - tcp://0.0.0.0:1234
  
    resources:
      # -- Resource limits for Buildqd 
      limits:
        cpu: 1000m
        memory: 1Gi
      # -- Resource requests for Buildqd 
      requests:
        cpu: 100m
        memory: 128Mi

    # Buildkit persistant volume size for shared cache
    persistentVolumeClaim:
      storageSize: 100Gi

web:
  # -- Number of replicas for Web 
  replicas: 1

  imageName: "web"

  # -- Optionally set the scheduler for pods
  schedulerName: ""

  # -- Optionally set the name of the PriorityClass for pods
  priorityClassName: null

  # -- NodeSelector to pin pods to certain set of nodes
  nodeSelector: { }

  # -- Pod affinity settings
  affinity: { }

  # -- Pod tolerations
  tolerations: []

  # -- Pod labels
  podLabels: {}

  # -- Pod annotations
  podAnnotations: {}

  # -- Annotations
  annotations: {}

  # Web autoscaling configuration
  autoscaling:
    # -- Enable autoscaling for Web 
    enabled: false
    # -- Minimum autoscaling replicas for Web 
    minReplicas: 1
    # -- Maximum autoscaling replicas for Web 
    maxReplicas: 3
    # -- Target CPU utilisation percentage for Web 
    targetCPUUtilizationPercentage: 60
    # -- Target memory utilisation percentage for Web 
    targetMemoryUtilizationPercentage: 80

  resources:
    # -- Resource limits for Web 
    limits:
      cpu: 1000m
      memory: 1Gi
    # -- Resource requests for Web 
    requests:
      cpu: 100m
      memory: 128Mi

  # Web service configuration
  service:
    # -- Port of the Web service
    port: 8443
    # -- Port of the Web Metrics service
    metricsPort: 9090
    # -- Type of the Web service
    type: ClusterIP
    # -- Annotations for the Web service
    annotations: {}
    # -- Labels for the Web service
    labels: {}

  # Web ingress configuration
  ingress:
    # -- Specify if the Web Ingress is enabled
    enabled: false
    # -- Ingress Class Name. May be required for k8s >= 1.18
    ingressClassName: "nginx"
    # -- Annotations for the Web ingress
    annotations: {}
    # -- hosts configuration for the Web ingress
    hosts:
      - host: devzero.example.com
        paths:
          - path: /
            # -- pathType (e.g. ImplementationSpecific, Prefix, ... etc.) might also be required for some Ingress Controllers
            # pathType: Prefix
    # -- TLS configuration for the Web ingress
    tls:
      - secretName: devzero-api-tls
        hosts:
          - devzero.example.com

#### External dependencies ####

# Vault external dependencies
#vault:

# Minio external dependencies
#minio:

# Postgres external dependencies
postgres:
  logsrv:
    metrics:
      enabled: true
    
    primary:
      persistence:
        size: "50Gi"
    
    auth:
      database: "logsrv"
      username: "devzero"
      password: ""
    
    architecture: "standalone"

  hydra:
    metrics:
      enabled: true
    
    primary:
      persistence:
        size: "50Gi"
    
    auth:
      database: "hydra"
      username: "hydra"
      password: ""

    architecture: "standalone"

  pulse:

# Mysql external dependencies 
mysql:
  polland:
    auth:
      username: "polland"
      database: "polland"
      password: ""

  pulse:
      username: "pulse"
      database: "pulse"
      password: ""

# MongoDB external dependencies
mongodb:
  metrics:
    enabled: true
    containerPort: 9090
  
  persistence:
    size: "50Gi"
  
  architecture: "replicaset"
  
  auth:
    usernames:
      - "devzero"
    databases:
      - "backend"
    passwords:
      - ""

# Redis external dependencies
redis:
  backend:
    architecture: "standalone"
    
    master:
      persistence:
        enabled: true
      serviceAccount:
        create: false
    
    serviceAccount:
      create: false
    
    auth:
      password: ""
    
    replica:
      replicaCount: 0

  hydra:
    architecture: "standalone"
    
    master:
      persistence:
        enabled: true
      serviceAccount:
        create: false
    
    serviceAccount:
      create: false
    
    auth:
      password: ""
    
    replica:
      replicaCount: 0

  polland:
    architecture: "standalone"
    
    master:
      persistence:
        enabled: true
      serviceAccount:
        create: false
    
    serviceAccount:
      create: false
    
    auth:
      password: ""
    
    replica:
      replicaCount: 0

# TimescaleDB external dependencies
timescaledb-single:
  replicaCount: 1
  secrets:
    credentials:
      PATRONI_SUPERUSER_PASSWORD: ""
      PATRONI_REPLICATION_PASSWORD: ""
      PATRONI_admin_PASSWORD: ""

